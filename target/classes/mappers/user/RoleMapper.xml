<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finacne.modules.user.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.finacne.modules.user.entity.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_title" jdbcType="VARCHAR" property="roleTitle" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.finacne.modules.user.entity.Role">
    <result column="role_describe" jdbcType="VARBINARY" property="roleDescribe" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, role_title, role_code, create_time
  </sql>
  <sql id="Blob_Column_List">
    role_describe
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.finacne.modules.user.entity.Role">
    update role
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleTitle != null">
        role_title = #{roleTitle,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleDescribe != null">
        role_describe = #{roleDescribe,jdbcType=VARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.finacne.modules.user.entity.Role">
    update role
    set role_id = #{roleId,jdbcType=BIGINT},
      role_title = #{roleTitle,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      role_describe = #{roleDescribe,jdbcType=VARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.finacne.modules.user.entity.Role">
    update role
    set role_id = #{roleId,jdbcType=BIGINT},
      role_title = #{roleTitle,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.finacne.modules.user.entity.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_title" jdbcType="VARCHAR" property="roleTitle" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.finacne.modules.user.entity.Role">
    <result column="role_describe" jdbcType="VARBINARY" property="roleDescribe" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, role_title, role_code, create_time
  </sql>
  <sql id="Blob_Column_List">
    role_describe
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.finacne.modules.user.entity.Role">
    update role
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleTitle != null">
        role_title = #{roleTitle,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleDescribe != null">
        role_describe = #{roleDescribe,jdbcType=VARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.finacne.modules.user.entity.Role">
    update role
    set role_id = #{roleId,jdbcType=BIGINT},
      role_title = #{roleTitle,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      role_describe = #{roleDescribe,jdbcType=VARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.finacne.modules.user.entity.Role">
    update role
    set role_id = #{roleId,jdbcType=BIGINT},
      role_title = #{roleTitle,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>